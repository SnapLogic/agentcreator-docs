{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SnapLogic AgentCreator Experimental (Beta) Documentation","text":"<p>This is the documentation site for the AgentCreator Experimental (Beta) Snap Pack for the SnapLogic AgentCreator product. The AgentCreator Experimental Snap Pack is a Beta Snap Pack provided by the AgentCreator development team which is set up to preview new capabilities inside of a customer org rather than only being available in the SnapLabs environment. </p>"},{"location":"snaps/","title":"Snap Documentation","text":"<p>The Snaps provided in this Snap Pack are classified as Beta Snaps that are delivered with the intent to get new features in front of customers in their primary development organizations in an environment that is local to their existing assets. Rather than in the SnapLogic SnapLabs environments where there is a need to migrate more assets external to the environment that they are actively using to see how the new features and enhancements could work in a pipeline that is closer to production.</p>"},{"location":"snaps/#snaps-included","title":"Snaps Included","text":"<p>The following Snaps are currently included in the AgentCreator Experimental (Beta) Snap Pack</p>"},{"location":"snaps/#agent-visualizer","title":"Agent Visualizer","text":""},{"location":"snaps/#mcp-function-generator","title":"MCP Function Generator","text":""},{"location":"snaps/#mcp-invoke","title":"MCP Invoke","text":""},{"location":"snaps/#mcp-server-router","title":"MCP Server Router","text":""},{"location":"snaps/#mcp-sse-account","title":"MCP SSE Account","text":""},{"location":"snaps/#deprecated-snaps","title":"Deprecated Snaps","text":"<p>No Snaps have been deprecated at this time.</p>"},{"location":"snaps/#snap-pack-release-history","title":"Snap Pack Release History","text":""},{"location":"snaps/agent-visualizer/","title":"Agent Visualizer","text":"<p>The Agent Visualizer Snap is a Utility Snap for SnapLogic AI Agents. It provides a comprehensive dual-view interface combining an interactive diagram and a detailed step-by-step log. This dual visualization approach enables users to trace and analyze agent behavior precisely, offering enhanced transparency into complex AI agent operations and making it easier to understand how agents process and respond to user requests.</p> <p></p>"},{"location":"snaps/agent-visualizer/#prerequisites","title":"Prerequisites","text":"<ul> <li>Existing Agentic Pipeline which has the full <code>messages</code> list for the Agent, or a pipeline which contains <code>agent_vis_log</code> object generated from an Agent Visualizer Snap previously</li> </ul>"},{"location":"snaps/agent-visualizer/#snap-views","title":"Snap views","text":"View Description Examples of upstream and downstream snaps Input This Snap has exactly one document input view. The Snap requires an input document to have either an Agent \"messages\" list or \"agent_vis_log\" object as part of the input document schema for it to be visualized by the Agent Visualizer UI. PipeLoop Output This Snap supports exactly two document output views.<ul><li>The first view is a passthrough of the input document for further processing downstream</li><li>The second output view generates the actual log (\"agent_vis_log\") that is being visualized in the Agent Visualizer UI</li></ul> JSON Formatter Error Error handling is a generic way to handle errors without losing data or failing the Snap execution. You can handle the errors that the Snap might encounter when running the pipeline by choosing one of the following options from the \u201dWhen errors occur\u201c dropdown under the Views tab. The available options are:<ul><li>Stop Pipeline Execution Stops the current pipeline execution when an error occurs.</li><li>Discard Error Data and Continue Ignores the error, discards that record, and continues with the remaining records.</li><li>Route Error Data to Error View Routes the error data to an error view without stopping the Snap execution.</li></ul>Learn more about Error handling in Pipelines."},{"location":"snaps/agent-visualizer/#snap-settings","title":"Snap settings","text":"<p>Legend:</p> <ul> <li>Expression icon(): Allows using JavaScript syntax to access SnapLogic Expressions to set field values dynamicall (if enabled). If disabled, you can provide a static value. Learn more.</li> <li>SnapGPT (): Generates SnapLogic Expressions based on natural language using SnapGPT. Learn more.</li> <li>Suggestion icon (): Populates a list of values dynamically based on your Snap configuration. You can select only one attribute at a time using the icon. Type into the field if it supports a comma-separated list of values.</li> <li>Upload (): Uploads files. Learn more.</li> </ul> Field / Field set Type Description Label String Required. Specify a unique name for the Snap. Modify this to be more appropriate, esepcially if more than one of the same Snaps is in the pipeline.Default value: Agent VisualizerExample: Jira Agent Visualization Log content String/Expression Required. Specify the <code>messages</code> list or <code>agent_vis_log</code> object from the upstream documentDefault value: <code>$messages</code> Visualize Button Click to launch the Agent Visualizer UI."},{"location":"snaps/mcp-function-generator/","title":"MCP Function Generator","text":"<p>The MCP Function Generator Snap is a Snap to convert the tools available from an MCP server to a list of function definitions, with the additional ability to add \"list resource\" and \"read resource\" to the function definitions list.</p> <p></p>"},{"location":"snaps/mcp-function-generator/#prerequisites","title":"Prerequisites","text":"<ul> <li>A valid MCP SSE Account with required fields provided.</li> </ul>"},{"location":"snaps/mcp-function-generator/#snap-views","title":"Snap views","text":"View Description Examples of upstream and downstream snaps Input The Snap supports a maximum of one document input view. <ul><li>Mapper</li></ul> Output The output contains a list (array) of tools or functions. Each item describes one function that can be used.  The output schema includes a set of MCP functions, each with metadata (the MCP operation to perform) and a structured definition of what input parameters they expect. <ul><li>OpenAI Tool Calling</li><li>Azure OpenAI Tool Calling</li><li>Google Gemini API Tool Calling</li><li>Amazon Bedrock Converse API Tool Calling</li></ul> Error Error handling is a generic way to handle errors without losing data or failing the Snap execution. You can handle the errors that the Snap might encounter when running the pipeline by choosing one of the following options from the When errors occur list under the Views tab. The available options are:<ul><li>Stop Pipeline Execution Stops the current pipeline execution when an error occurs.</li><li>Discard Error Data and Continue Ignores the error, discards that record, and continues with the remaining records.</li><li>Route Error Data to Error View Routes the error data to an error view without stopping the Snap execution.</li></ul>Learn more about Error handling in Pipelines."},{"location":"snaps/mcp-function-generator/#snap-settings","title":"Snap settings","text":"<p>Legend:</p> <ul> <li>Expression icon(): Allows using JavaScript syntax to access SnapLogic Expressions to set field values dynamicall (if enabled). If disabled, you can provide a static value. Learn more.</li> <li>SnapGPT (): Generates SnapLogic Expressions based on natural language using SnapGPT. Learn more.</li> <li>Suggestion icon (): Populates a list of values dynamically based on your Snap configuration. You can select only one attribute at a time using the icon. Type into the field if it supports a comma-separated list of values.</li> <li>Upload (): Uploads files. Learn more.</li> </ul> Field / Field set Type Description Label String Required. Specify a unique name for the Snap. Modify this to be more appropriate, esepcially if more than one of the same Snaps is in the pipeline.Default value: MCP Function GeneratorExample: Firecrawl tools Expose Tools Boolean Select to include tools available from an MCP server to be converted into a list function definitions.Default status: Selected Expose Resources Boolean Select to include two predefined tools: \"read_resource\" and \"list_resources\" into the list of function definitions, to enable the LLM to list available resources and read the resources.Default status: Deselected"},{"location":"snaps/mcp-invoke/","title":"MCP Invoke","text":"<p>The MCP Invoke Snap is a Snap to perform operations such as calling a tool, listing resources, and reading resources to get results on an MCP server.</p> <p></p>"},{"location":"snaps/mcp-invoke/#prerequisites","title":"Prerequisites","text":"<ul> <li>A valid MCP SSE Account with required fields provided.</li> </ul>"},{"location":"snaps/mcp-invoke/#snap-views","title":"Snap views","text":"View Description Examples of upstream and downstream snaps Input The Snap supports a maximum of one document input view. <ul><li>Mapper</li></ul> Output This Snap supports exactly two document output views.<ul><li>The First view is a passthrough of the input document for further processing downstream</li><li>The second output view is the actual agent visualizer log that is being visualized</li></ul> <ul><li>OpenAI Function Result Generator</li><li>Azure OpenAI Function Result Generator</li><li>Google GenAI Function Result Generator</li><li>Amazon Bedrock Function Result Generator</li></ul> Error Error handling is a generic way to handle errors without losing data or failing the Snap execution. You can handle the errors that the Snap might encounter when running the pipeline by choosing on eof the following options from the When errors occur list under the Views tab. The available options are:<ul><li>Stop Pipeline Execution Stops the current pipeline execution when an error occurs.</li><li>Discard Error Data and Continue Ignores the error, discards that record, and continues with the remaining records.</li><li>Route Error Data to Error View Routes the error data to an error view without stopping the Snap execution.</li></ul>Learn more about Error handling in Pipelines."},{"location":"snaps/mcp-invoke/#snap-settings","title":"Snap settings","text":"<p>Legend:</p> <ul> <li>Expression icon(): Allows using JavaScript syntax to access SnapLogic Expressions to set field values dynamicall (if enabled). If disabled, you can provide a static value. Learn more.</li> <li>SnapGPT (): Generates SnapLogic Expressions based on natural language using SnapGPT. Learn more.</li> <li>Suggestion icon (): Populates a list of values dynamically based on your Snap configuration. You can select only one attribute at a time using the icon. Type into the field if it supports a comma-separated list of values.</li> <li>Upload (): Uploads files. Learn more.</li> </ul> Field / Field set Type Description Label String Required. Specify a unique name for the Snap. Modify this to be more appropriate, esepcially if more than one of the same Snaps is in the pipeline.Default value: MCP InvokeExample: Firecrawl MCP Server Operation String/Expression Required. Specify the operation to perform for the current input. Operation can be one of <code>tools/call</code>, <code>resources/read</code>, or <code>resources/list</code>. The operation is provided within the <code>sl_metadata</code> if used with the MCP Function Generator Snap.Default value: <code>tools/call</code> Tool Name String/Expression The name of the tool to be called. Enabled if the \"Operation\" is <code>tools/call</code> or is an expression.Example: <code>$function.name</code> Parameters String/Expression The \"tool call\" or \"read resource\" parameters to be used for the operation. Enabled if the \"Operation\" is <code>tools/call</code>, <code>resources/read</code>, or is an expression. Example: <code>$function.json_arguments</code>"},{"location":"snaps/mcp-server-router/","title":"MCP Server Router","text":"<p>The MCP Server Router Snap routes input documents based on the request method (<code>sl_method</code>). It also enriches tool call requests with necessary metadata before sending them downstream.</p> <p></p>"},{"location":"snaps/mcp-server-router/#snap-views","title":"Snap views","text":"View Description Examples of upstream and downstream Snaps Input This Snap supports exactly one document input view. <ul> <li>Multi Pipeline Function Generator</li> <li>OpenAPI Function Generator</li> <li>APIM Function Generator</li> <li>Function Generator</li> </ul> Output This Snap supports exactly two document output views. <ul> <li>The first output view outputs the input document when the request method is <code>tools/list</code>.</li> <li>The second output view outputs the request object when the request method is <code>tools/call</code>. If a tools list is provided in the input document, the Snap adds the corresponding tool metadata to the request object.</li> </ul> <ul> <li>Mapper</li> <li>Pipeline Execute</li> </ul> Error Error handling is a generic way to handle errors without losing data or failing the Snap execution. You can handle the errors that the Snap might encounter when running the pipeline by choosing on eof the following options from the When errors occur list under the Views tab. The available options are:<ul><li>Stop Pipeline Execution Stops the current pipeline execution when an error occurs.</li><li>Discard Error Data and Continue Ignores the error, discards that record, and continues with the remaining records.</li><li>Route Error Data to Error View Routes the error data to an error view without stopping the Snap execution.</li></ul>Learn more about Error handling in Pipelines."},{"location":"snaps/mcp-server-router/#snap-settings","title":"Snap settings","text":"<p>Legend:</p> <ul> <li>Expression icon(): Allows using JavaScript syntax to access SnapLogic Expressions to set field values dynamicall (if enabled). If disabled, you can provide a static value. Learn more.</li> <li>SnapGPT (): Generates SnapLogic Expressions based on natural language using SnapGPT. Learn more.</li> <li>Suggestion icon (): Populates a list of values dynamically based on your Snap configuration. You can select only one attribute at a time using the icon. Type into the field if it supports a comma-separated list of values.</li> <li>Upload (): Uploads files. Learn more.</li> </ul> Field / Field set Type Description Label String Required. Specify a unique name for the Snap. Modify this to be more appropriate, esepcially if more than one of the same Snaps is in the pipeline.Default value: MCP Server RouterExample: Firecrawl MCP Server Router Request String/Expression The request object generated from the MCP Server Adapter to the MCP Server Pipeline. It must include the <code>sl_method</code> field, which defines the request method.Supported request methods are <code>tools/list</code> and <code>tools/call</code>.Default value:  <code>$</code>Example: <code>$original</code>"},{"location":"snaps/mcp-sse-account/","title":"MCP SSE Account","text":"<p>Use this account type to connect the MCP Client Snaps to a remote MCP SSE Server. </p> <p></p>"},{"location":"snaps/mcp-sse-account/#prerequisites","title":"Prerequisites","text":"<ul> <li>A valid MCP SSE URI and required header fields if necessary for an MCP Server</li> </ul>"},{"location":"snaps/mcp-sse-account/#account-settings","title":"Account settings","text":"<p>Legend:</p> <ul> <li>Expression icon(): Allows using JavaScript syntax to access SnapLogic Expressions to set field values dynamicall (if enabled). If disabled, you can provide a static value. Learn more.</li> <li>SnapGPT (): Generates SnapLogic Expressions based on natural language using SnapGPT. Learn more.</li> <li>Suggestion icon (): Populates a list of values dynamically based on your Snap configuration. You can select only one attribute at a time using the icon. Type into the field if it supports a comma-separated list of values.</li> <li>Upload (): Uploads files. Learn more.</li> </ul> Field / Field set Type Description Label String Required. Specify a unique name for the Account.Default value: N/AExample: DeepWiki MCP Account MCP SSE uri String/Expression Required. Specify the URI to the MCP server to connect to. The URI must include the correct <code>/sse</code> path as provided by the MCP Server provider. Example: <code>https://mcp.deepwiki.com/sse</code> Additional headers Use this field set to provide header field to use for requests to the MCP Server Header name String/Expression The name of the header field Header value String/Expression The value of the header field Timeout Integer/Expression The number of seconds the request must wait before terminating the request. Default value: 60"},{"location":"snaps/mcp-streamable-http-account/","title":"MCP Streamable Http Account","text":"<p>Use this account type to connect the MCP Client Snaps to a remote MCP Streamable HTTP Server. </p> <p></p>"},{"location":"snaps/mcp-streamable-http-account/#prerequisites","title":"Prerequisites","text":"<ul> <li>A valid MCP Streamable HTTP URI and required header fields if necessary for an MCP Server</li> </ul>"},{"location":"snaps/mcp-streamable-http-account/#account-settings","title":"Account settings","text":"<p>Legend:</p> <ul> <li>Expression icon(): Allows using JavaScript syntax to access SnapLogic Expressions to set field values dynamicall (if enabled). If disabled, you can provide a static value. Learn more.</li> <li>SnapGPT (): Generates SnapLogic Expressions based on natural language using SnapGPT. Learn more.</li> <li>Suggestion icon (): Populates a list of values dynamically based on your Snap configuration. You can select only one attribute at a time using the icon. Type into the field if it supports a comma-separated list of values.</li> <li>Upload (): Uploads files. Learn more.</li> </ul> Field / Field set Type Description Label String Required. Specify a unique name for the Account.Default value: N/AExample: DeepWiki MCP Account MCP Streamable HTTP uri String/Expression Required. Specify the URI to the MCP server to connect to. The URI must include the correct <code>/mcp</code> path as provided by the MCP Server provider. Example: <code>https://mcp.deepwiki.com/mcp</code> Additional headers Use this field set to provide header field to use for requests to the MCP Server Header name String/Expression The name of the header field Header value String/Expression The value of the header field Timeout Integer/Expression The number of seconds the request must wait before terminating the request. Default value: 60"},{"location":"snaps/snap-pack-history/","title":"Snap Pack history: AgentCreator Experimental (Beta)","text":"Release NameDate Snap Pack Version Type Updates June 2025June 11, 2025 <pre>441patches31274</pre> Stable <ul> <li>Initial Release of Agent Visualizer Snap</li> </ul> June 2025July 7, 2025 <pre>441patches31636</pre> Latest <ul> <li>Updated Agent Visualizer to be Ultra-Compatible (only one output view may end up opened for resposne)</li> <li>Updated doc link for Agent Visuzlier Snap</li> </ul> August 2025August 12, 2025 <pre></pre> Stable <ul> <li>Initial Release of MCP Snaps and Account</li> <ul> <li>MCP Function Generator</li> <li>MCP Invoke</li> <li>MCP SSE Account</li> </ul> </ul>"}]}